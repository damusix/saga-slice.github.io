(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{68:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return a})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return l}));var r=t(2),s=(t(0),t(92));const o={id:"philosophy",title:"Philosophy",sidebar_label:"Philosophy"},a={unversionedId:"philosophy",id:"philosophy",isDocsHomePage:!1,title:"Philosophy",description:"Building apps can be messy",source:"@site/docs/philosophy.md",permalink:"/docs/philosophy",editUrl:"https://github.com/saga-slice/saga-slice.github.io/edit/master/website/docs/philosophy.md",sidebar_label:"Philosophy",sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"createModule API",permalink:"/docs/api/create-module"}},i=[{value:"Building apps can be messy",id:"building-apps-can-be-messy",children:[]},{value:"Bringing in saga slices",id:"bringing-in-saga-slices",children:[]},{value:"Wiring everything up",id:"wiring-everything-up",children:[]}],c={rightToc:i};function l({components:e,...n}){return Object(s.b)("wrapper",Object(r.a)({},c,n,{components:e,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"building-apps-can-be-messy"},"Building apps can be messy"),Object(s.b)("p",null,"It's even messier when you have to manage request lifecycles, side effects, shared global state, and 3 to 4 boilerplate files in order to manage 1 data resource. This guide aims to provide a consistent pattern intended to increase productivity and reduce entropy long term."),Object(s.b)("p",null,"Typically, there are 2 common patterns implemented in redux-world that you will find in the wild:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"Pattern A:")," Conventions suggested by the official redux guides"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"Pattern B:")," Place all redux-related files inside of the corresponding component folder")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Pattern A: Official redux convention")),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-diff"}),"\u251c\u2500\u2500 actions\n\u2502   \u251c\u2500\u2500 cats.js\n\u2502   \u251c\u2500\u2500 todos.js\n\u2502   \u2514\u2500\u2500 users.js\n\u251c\u2500\u2500 components\n\u2502   \u251c\u2500\u2500 cats\n\u2502   \u2502   \u251c\u2500\u2500 Form.jsx\n\u2502   \u2502   \u2514\u2500\u2500 ViewAll.jsx\n\u2502   \u251c\u2500\u2500 todos\n\u2502   \u2502   \u251c\u2500\u2500 Form.jsx\n\u2502   \u2502   \u2514\u2500\u2500 ViewAll.jsx\n\u2502   \u2514\u2500\u2500 users\n\u2502       \u251c\u2500\u2500 Form.jsx\n\u2502       \u2514\u2500\u2500 ViewAll.jsx\n\u251c\u2500\u2500 constants\n\u2502   \u251c\u2500\u2500 cats.js\n\u2502   \u251c\u2500\u2500 todos.js\n\u2502   \u2514\u2500\u2500 users.js\n\u251c\u2500\u2500 reducers\n\u2502   \u251c\u2500\u2500 cats.js\n\u2502   \u251c\u2500\u2500 index.js\n\u2502   \u251c\u2500\u2500 todos.js\n\u2502   \u2514\u2500\u2500 users.js\n\u251c\u2500\u2500 sagas\n\u2502   \u251c\u2500\u2500 cats.js\n\u2502   \u251c\u2500\u2500 todos.js\n\u2502   \u2514\u2500\u2500 users.js\n\u2514\u2500\u2500 index.js\n")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Pattern B: Component scoped convention")),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-diff"}),"\u251c\u2500\u2500 components\n\u2502   \u251c\u2500\u2500 cats\n\u2502   \u2502   \u251c\u2500\u2500 Form.jsx\n\u2502   \u2502   \u251c\u2500\u2500 ViewAll.jsx\n\u2502   \u2502   \u251c\u2500\u2500 actions.js\n\u2502   \u2502   \u251c\u2500\u2500 constants.js\n\u2502   \u2502   \u251c\u2500\u2500 reducer.js\n\u2502   \u2502   \u2514\u2500\u2500 sagas.js\n\u2502   \u251c\u2500\u2500 todos\n\u2502   \u2502   \u251c\u2500\u2500 Form.jsx\n\u2502   \u2502   \u251c\u2500\u2500 ViewAll.jsx\n\u2502   \u2502   \u251c\u2500\u2500 actions.js\n\u2502   \u2502   \u251c\u2500\u2500 constants.js\n\u2502   \u2502   \u251c\u2500\u2500 reducer.js\n\u2502   \u2502   \u2514\u2500\u2500 sagas.js\n\u2502   \u2514\u2500\u2500 users\n\u2502       \u251c\u2500\u2500 Form.jsx\n\u2502       \u251c\u2500\u2500 ViewAll.jsx\n\u2502       \u251c\u2500\u2500 actions.js\n\u2502       \u251c\u2500\u2500 constants.js\n\u2502       \u251c\u2500\u2500 reducer.js\n\u2502       \u2514\u2500\u2500 sagas.js\n\u2514\u2500\u2500 index.js\n")),Object(s.b)("p",null,"Both ways work to organize the code and are fine. We can apply a similar structure to saga slices:"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Pattern A:")),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-diff"}),"- \u251c\u2500\u2500 actions\n  \u251c\u2500\u2500 components\n  \u2502   \u251c\u2500\u2500 cats\n  \u2502   \u2502   \u251c\u2500\u2500 Form.jsx\n  \u2502   \u2502   \u2514\u2500\u2500 ViewAll.jsx\n  \u2502   \u251c\u2500\u2500 todos\n  \u2502   \u2502   \u251c\u2500\u2500 Form.jsx\n  \u2502   \u2502   \u2514\u2500\u2500 ViewAll.jsx\n  \u2502   \u2514\u2500\u2500 users\n  \u2502       \u251c\u2500\u2500 Form.jsx\n  \u2502       \u2514\u2500\u2500 ViewAll.jsx\n- \u251c\u2500\u2500 constants\n- \u251c\u2500\u2500 reducers\n+ \u251c\u2500\u2500 modules\n+ \u2502   \u251c\u2500\u2500 index.js\n+ \u2502   \u251c\u2500\u2500 cats.js\n+ \u2502   \u251c\u2500\u2500 todos.js\n+ \u2502   \u2514\u2500\u2500 users.js\n  \u251c\u2500\u2500 index.js\n+ \u2514\u2500\u2500 store.js\n")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Pattern B:")),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-diff"}),"  \u251c\u2500\u2500 components\n  \u2502   \u251c\u2500\u2500 cats\n  \u2502   \u2502   \u251c\u2500\u2500 Form.jsx\n  \u2502   \u2502   \u251c\u2500\u2500 ViewAll.jsx\n- \u2502   \u2502   \u251c\u2500\u2500 actions.js\n- \u2502   \u2502   \u251c\u2500\u2500 constants.js\n- \u2502   \u2502   \u251c\u2500\u2500 reducer.js\n+ \u2502   \u2502   \u2514\u2500\u2500 sagaSlice.js\n  \u2502   \u251c\u2500\u2500 todos\n  \u2502   \u2502   \u251c\u2500\u2500 Form.jsx\n  \u2502   \u2502   \u251c\u2500\u2500 ViewAll.jsx\n- \u2502   \u2502   \u251c\u2500\u2500 actions.js\n- \u2502   \u2502   \u251c\u2500\u2500 constants.js\n- \u2502   \u2502   \u251c\u2500\u2500 reducer.js\n+ \u2502   \u2502   \u2514\u2500\u2500 sagaSlice.js\n  \u2502   \u2514\u2500\u2500 users\n  \u2502       \u251c\u2500\u2500 Form.jsx\n  \u2502       \u251c\u2500\u2500 ViewAll.jsx\n- \u2502       \u251c\u2500\u2500 actions.js\n- \u2502       \u251c\u2500\u2500 constants.js\n- \u2502       \u251c\u2500\u2500 reducer.js\n+ \u2502       \u2514\u2500\u2500 sagaSlice.js\n  \u251c\u2500\u2500 index.js\n+ \u251c\u2500\u2500 modules.js\n+ \u2514\u2500\u2500 store.js\n")),Object(s.b)("h2",{id:"bringing-in-saga-slices"},"Bringing in saga slices"),Object(s.b)("p",null,"In either case, it is cleaner to separate redux store, react config, and module declarations into separate files. This allows us to leave each file to perform its' intended purpose. For example:"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Pattern A:")," ",Object(s.b)("strong",{parentName:"p"},Object(s.b)("inlineCode",{parentName:"strong"},"./modules/index.js"))),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"// ./modules/index.js\nimport CatsSlice from './cats'\nimport UsersSlice from './users'\nimport TodosSlice from './todos'\n\nexport default [\n CatsSlice,\n UsersSlice,\n TodosSlice\n];\n")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Pattern B:")," ",Object(s.b)("strong",{parentName:"p"},Object(s.b)("inlineCode",{parentName:"strong"},"./modules.js"))),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"// ./modules.js\nimport CatsSlice from './cats/components/sagaSlice'\nimport UsersSlice from './users/components/sagaSlice'\nimport TodosSlice from './todos/components/sagaSlice'\n\nexport default [\n CatsSlice,\n UsersSlice,\n TodosSlice\n];\n")),Object(s.b)("p",null,"Both should only worry about importing the saga slice modules and not couple store instantiation logic inside of here. This allows for this file to be the source of truth for declaring saga slices. It can grow as much as it needs to without logic clutter."),Object(s.b)("h2",{id:"wiring-everything-up"},"Wiring everything up"),Object(s.b)("p",null,"Wiring up React, and wiring up redux can both become a stringy, tangled mess. This is why it is wise to separate the two."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"File")," ",Object(s.b)("strong",{parentName:"p"},Object(s.b)("inlineCode",{parentName:"strong"},"./store.js"))),Object(s.b)("p",null,"Should only contain redux logic. It should not be coupled with react logic at all. The helps us grow the logic needed for redux in particular away from React."),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga, rootReducer } from 'saga-slice';\n\n\u200b// This is where you would bring in your array of saga slices or any other\n// map of extra reducers.\nimport reduxModules from './modules';\nimport history from './utils/history';\n\n\u200bconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\u200b\nexport const store = createStore(\n\n  rootReducer(reduxModules, {\n  \u200b\n\n    // Extra reducers\n    router: connectRouter(history)\n\n  }),\n\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n\n);\n\nexport const { getState, dispatch, subscribe } = store;\n\nsagaMiddleware.run(rootSaga(reduxModules));\n\nexport default store;\n")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"File")," ",Object(s.b)("strong",{parentName:"p"},Object(s.b)("inlineCode",{parentName:"strong"},"./index.js"))),Object(s.b)("p",null,"This file should be focused on your root level application logic relating to react. This includes any routing you might want to implement, HOCs, and containers that need to wrap your application logic."),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\n\nimport App from './App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nexport const AppWrapper = (\n\n  <Provider store={store}>\n      <App />\n  </Provider>\n);\n\u200b\nReactDOM.render(AppWrapper, document.getElementById('root'));\n")),Object(s.b)("p",null,"\u200b"))}l.isMDXComponent=!0},92:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var r=t(0),s=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=s.a.createContext({}),p=function(e){var n=s.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return s.a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return s.a.createElement(s.a.Fragment,{},n)}},b=s.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(t),b=r,m=d["".concat(a,".").concat(b)]||d[b]||u[b]||o;return t?s.a.createElement(m,i(i({ref:n},l),{},{components:t})):s.a.createElement(m,i({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=b;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var l=2;l<o;l++)a[l]=t[l];return s.a.createElement.apply(null,a)}return s.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);